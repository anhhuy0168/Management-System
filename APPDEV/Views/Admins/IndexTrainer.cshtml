@model IEnumerable<APPDEV.Models.Trainer>
@{
    ViewBag.Title = "Index Trainer";
}
@if (Request.IsAuthenticated && User.IsInRole("admin"))
{
    <h2 style="margin-bottom: 15px; text-align: center; margin-top: 45px;">List Of Trainer</h2>


    <div style="display: flex; justify-content: space-between; margin-bottom: 10px;">
        <div class="form-group">
            @Html.ActionLink("Create a New Trainer", "CreateTrainerAccount", "Admins", new { @class = "btn btn-primary" })
        </div>
    </div>

    <table class="table table-bordered">
        <thead>
            <tr>
                <th scope="col">Trainer Email</th>
                <th scope="col">Trainer FullName</th>
                <th scope="col">Trainer Age</th>
                <th scope="col">Trainer Address</th>
                <th scope="col">Specialty</th>
                <th scope="col">Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in @Model)
            {
                <tr>
                    <th style="vertical-align: middle" scope="row" class="col-sm-3">@item.User.Email</th>
                    <td style="vertical-align: middle" class="col-sm-3">@item.FullName</td>
                    <td style="vertical-align: middle" class="col-sm-3">@item.Age</td>
                    <td style="vertical-align: middle" class="col-sm-3">@item.Address</td>
                    <td style="vertical-align: middle" class="col-sm-3">@item.Specialty</td>
                    <td>
                        @Html.ActionLink("Edit", "EditTrainerAccount", "Admins", new { id = @item.TrainerId }, new { @class = "btn btn-primary" })
                        @Html.ActionLink("Delete", "DeleteTrainerAccount", "Admins", new { id = @item.TrainerId }, new { @class = "btn btn-danger" })
                        @Html.ActionLink("Change Password", "TrainerPasswordChange", "Admins", new { id = @item.TrainerId }, new { @class = "btn btn-success" })

                    </td>
                </tr>
            }
        </tbody>
    </table>
}














